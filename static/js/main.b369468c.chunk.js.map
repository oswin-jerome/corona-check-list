{"version":3,"sources":["Components/Footer/Footer.js","Components/Main/Main.js","App.js","serviceWorker.js","index.js"],"names":["Footer","id","className","href","src","alt","Score","props","baseClassName","animationClassName","animate","diff","question","Main","point","questions","max","length","useState","currentQuestion","setcurrentQuestion","points","setPoints","onAnswer","button","onClick","dangerouslySetInnerHTML","__html","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"uRAaeA,G,kBAXA,WACX,OACI,yBAAKC,GAAG,UACJ,uBAAGC,UAAU,UAAb,aAAgC,0BAAMA,UAAU,OAAhB,UAAhC,OAAkE,uBAAGC,KAAK,IAAR,iBAClE,uBAAGF,GAAG,KAAKE,KAAK,mCACZ,yBAAKC,IAAI,oDAAoDC,IAAI,S,+BC2D3EC,EAAQ,SAACC,GAAD,OAEZ,kBAAC,IAAD,CACEC,cAAc,WACdC,mBAAmB,OACnBC,QAAsB,GAAbH,EAAMI,MACZJ,EAAMK,SAAN,WAGQC,EAxEF,WAGT,IA2BmBC,EA3BfC,EAAY,CACZ,CAACH,SAAS,qBAAqBE,MAAM,GACrC,CAACF,SAAS,qBAAqBE,MAAM,GACrC,CAACF,SAAS,wBAAwBE,MAAM,GACxC,CAACF,SAAS,2BAA2BE,MAAM,GAC3C,CAACF,SAAS,8CAA8CE,MAAM,GAC9D,CAACF,SAAS,0BAA0BE,MAAM,GAC1C,CAACF,SAAS,6CAAwCE,MAAM,GACxD,CAACF,SAAS,uCAAuCE,MAAM,GACvD,CAACF,SAAS,gCAAgCE,MAAM,GAChD,CAACF,SAAS,kDAAkDE,MAAM,GAClE,CAACF,SAAS,4DAA4DE,MAAM,GAC5E,CAACF,SAAS,+EAA+EE,MAAM,IAG/FE,EAAMD,EAAUE,OAlBL,EAoB4BC,mBAAS,GApBrC,mBAoBVC,EApBU,KAoBMC,EApBN,OAqBUF,mBAAS,GArBnB,mBAqBVG,EArBU,KAqBHC,EArBG,KAuBTC,EAAW,SAACC,GACH,GAARA,GACCF,EAAUD,EAAON,EAAUI,GAAV,OAErBC,EAAmBD,EAAgB,IAoBvC,OACI,yBAAKlB,GAAG,QACHkB,EAAgBH,EAAI,6BACjB,uBAAGd,UAAU,YAAW,kBAAC,EAAD,CAAOS,KAAMI,EAAUI,GAAV,MAAqCP,SAAUG,EAAUI,MAC9F,yBAAKjB,UAAU,WACX,4BAAQuB,QAAS,WAAKF,EAAS,IAAKrB,UAAU,MAA9C,MACA,4BAAQuB,QAAS,WAAKF,EAAS,IAAKrB,UAAU,OAA9C,SAGD,6BACC,uBAAGA,UAAU,SAASwB,wBAAyB,CAAEC,QA3B9Cb,EA2BgEO,EA1B5EP,GAAO,EACC,oCACFA,GAAO,GAAKA,GAAO,EAEjB,2FAEHA,GAAO,GAAKA,GAAO,GAEhB,kCAEHA,GAAO,IAAMA,GAAO,GAEjB,+JAFN,SC9BEc,MATf,WACE,OACE,yBAAK1B,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,QCGc2B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.b369468c.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Footer.scss'\r\nconst Footer = () => {\r\n    return (\r\n        <div id=\"Footer\">\r\n            <p className=\"center\">Made with <span className=\"red\">❤</span> by <a href=\"\">Oswin Jerome</a></p>\r\n            <a id=\"gt\" href=\"https://github.com/oswin-jerome\">\r\n                <img src=\"https://image.flaticon.com/icons/svg/25/25231.svg\" alt=\"\"/>\r\n            </a>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Footer;","import React, { useState } from 'react';\r\nimport './Main.scss'\r\nimport AnimateOnChange from 'react-animate-on-change'\r\nconst Main = () => {\r\n\r\n\r\n    var questions = [\r\n        {question:\"Do you have Cough?\",point:1},\r\n        {question:\"Do you have Colds?\",point:1},\r\n        {question:\"Do you have Diarrhea?\",point:1},\r\n        {question:\"Do you have sore throat?\",point:1},\r\n        {question:\"Are you experiencing MYALGIA or Body Aches?\",point:1},\r\n        {question:\"Do you have a headache?\",point:1},\r\n        {question:\"Do you have a fever (100℉ and above)?\",point:1},\r\n        {question:\"Are you having difficulty breathing?\",point:2},\r\n        {question:\"Are you experiencing Fatigue?\",point:2},\r\n        {question:\"Have you traveled recently during past 14 days?\",point:3},\r\n        {question:\"Do you have a travel history to a COVID-19 INFECTED AREA?\",point:3},\r\n        {question:\"Do you have direct contact or is taking care of a positive COVID-19 PATIENT?\",point:3},\r\n    ];\r\n\r\n    var max = questions.length;\r\n\r\n    var [currentQuestion,setcurrentQuestion] = useState(0)\r\n    var [points,setPoints] = useState(0)\r\n\r\n    const onAnswer = (button)=>{\r\n        if(button==2){\r\n            setPoints(points+questions[currentQuestion]['point']);\r\n        }\r\n        setcurrentQuestion(currentQuestion+1);\r\n    }\r\n\r\n    const getResult = (point)=>{\r\n        if(point<=2){\r\n            return \"Maybe stress related and observe.\";\r\n        }else if(point>=3 && point<=5){\r\n            \r\n            return \"Hydrate properly and proper personal hygiene. <br/> Observe and Re-eveluate after 2 days\";\r\n        }\r\n        else if(point>=6 && point<=12){\r\n            \r\n            return \"Seek a consultation with Doctor\";\r\n        }\r\n        else if(point>=13 && point<=24){\r\n            \r\n            return \"Contact govt. officials,<br/>Call at Ministry of Healty,Govt. of India's 24x7 control room number <a href=\\\"tel:+91-11-2397 8046\\\">+91-11-2397 8046</a> \";\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div id=\"Main\">\r\n            {currentQuestion<max?<div>\r\n                <p className=\"question\"><Score diff={questions[currentQuestion]['point']} question={questions[currentQuestion]}></Score></p>\r\n                <div className=\"options\">\r\n                    <button onClick={()=>{onAnswer(1)}} className=\"no\">NO</button>\r\n                    <button onClick={()=>{onAnswer(2)}} className=\"yes\">YES</button>\r\n                    \r\n                </div>\r\n            </div>:<div>\r\n                    <p className=\"result\" dangerouslySetInnerHTML={{ __html: getResult(points) }}></p>\r\n                </div>}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Score = (props) =>\r\n    \r\n  <AnimateOnChange\r\n    baseClassName=\"question\"\r\n    animationClassName=\"hide\"\r\n    animate={props.diff !=0}>\r\n      {props.question['question']}\r\n  </AnimateOnChange>\r\n \r\nexport default Main;","import React from 'react';\nimport './App.css';\nimport Footer from './Components/Footer/Footer';\nimport Main from './Components/Main/Main';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main></Main>\n      <Footer></Footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}